#!/usr/bin/env python3
import os
from os.path import abspath, join, exists
from datetime import datetime

SERVER_HOME = abspath(join('modules', 'server'))
SERVER_CONFIG = ['--config', join(SERVER_HOME, 'deno.json')]
SERVER_PERMS = ['-A']
SERVER_ENTRYPOINT = join(SERVER_HOME, 'src', 'main.ts')
SERVER_ENV = dict(
    os.environ,
    VENUE_PORT='8000',
    VENUE_DB_USER='venue',
    VENUE_DB_PASSWORD='password',
    VENUE_DB_NAME='venue',
    VENUE_DB_HOST='127.0.0.1',
    VENUE_DB_SEED='true',
    VENUE_VISITOR_COOKIE_SECRET='secret',
    VENUE_BRAND_NAME='Venue DEV',
    VENUE_BRAND_IMAGE='http://localhost:8001/brand.png',
    VENUE_ADMIN_USERNAME='admin',
    VENUE_ADMIN_PASSWORD='admin',
)

E2E_HOME = abspath(join('modules', 'e2e'))

DOCKER_HOME = abspath('docker')


def cli():

    @command
    def run():
        cmd('deno', 'run',
            '--watch', '--cached-only',
            *SERVER_CONFIG,
            *SERVER_PERMS,
            SERVER_ENTRYPOINT,
            cwd=SERVER_HOME,
            env=SERVER_ENV)

    @command
    def cache():
        cmd('deno', 'cache',
            *SERVER_CONFIG,
            SERVER_ENTRYPOINT,
            cwd=SERVER_HOME)

    @command
    def lock():
        cmd('deno', 'cache',
            '--lock-write',
            *SERVER_CONFIG,
            SERVER_ENTRYPOINT,
            cwd=SERVER_HOME)

    @command
    def fmt():
        cmd('deno', 'fmt', *SERVER_CONFIG, cwd=SERVER_HOME)

    @command
    def lint():
        cmd('deno', 'lint', *SERVER_CONFIG, cwd=SERVER_HOME)

    @command
    def devenv_up():
        devenv('up', '-d')

    @command
    def devenv_down():
        devenv('down')

    @command
    def devenv_psql():
        devenv('exec', 'db', 'psql', '-U', 'postgres')

    @command
    def devenv(*args):
        compose('-f', 'docker-compose.devenv.yml', *args)

    @command
    def e2e_open():
        e2e('cypress', 'open')

    @command
    def e2e_run():
        e2e('cypress', 'run')

    def e2e(*args):
        if not exists(join(E2E_HOME, 'node_modules')):
            cmd('npm', 'install', cwd=E2E_HOME)
        cmd('npm', 'exec', *args, cwd=E2E_HOME,
            # https://github.com/webpack/webpack/issues/14532#issuecomment-947012063
            env=dict(os.environ, NODE_OPTIONS='--openssl-legacy-provider'))

    @command
    def build():
        distPath = abspath('dist')
        cmd('rm', '-rf', distPath)
        cmd('mkdir', '-p', distPath)

        # https://github.com/denoland/deno/issues/15119
        compilation_bug_workaround = True

        if compilation_bug_workaround:
            cmd('deno', 'bundle',
                *SERVER_CONFIG,
                SERVER_ENTRYPOINT,
                join(distPath, 'venue.js'),
                cwd=SERVER_HOME)
            cmd('deno', 'compile',
                *SERVER_CONFIG,
                *SERVER_PERMS,
                '--output', join(distPath, 'venue'),
                join(distPath, 'venue.js'),
                cwd=SERVER_HOME)
            cmd('rm', join(distPath, 'venue.js'))
        else:
            cmd('deno', 'compile',
                *SERVER_CONFIG,
                *SERVER_PERMS,
                '--output', join(distPath, 'venue'),
                SERVER_ENTRYPOINT,
                cwd=SERVER_HOME)

        cmd('cp', '-r',
            join(SERVER_HOME, 'resources'),
            join(distPath, 'resources'))

    @command
    def build_docker():
        compose('-f', 'docker-compose.build.yml', 'build', '--pull', env=dict(
            os.environ,
            VENUE_TAG='dev'
        ))

    @command
    def publish_docker():
        version = datetime.now().strftime("%Y%m%d_%H%M%S")
        compose('-f', 'docker-compose.build.yml', 'build', '--pull', env=dict(
            os.environ,
            VENUE_TAG=datetime.now().strftime("%Y%m%d_%H%M%S")
        ))
        cmd('docker', 'push', f'sirikon/venue:{version}')

    @command
    def compose(*args, **kwargs):
        cmd('docker', 'compose',
            '--project-name', 'venue-dev',
            '--project-directory', abspath('.'),
            *args, **kwargs, cwd=DOCKER_HOME)



# fmt: off
# https://gist.github.com/sirikon/d4327b6cc3de5cc244dbe5529d8f53ae
import inspect, sys, os, subprocess; os.chdir(os.path.dirname(__file__));commands = []
def cmd(*args, **kwargs): subprocess.run(args, **kwargs, check=True)
def spec(f): return inspect.getfullargspec(f)
def command(func): commands.append(func); return func
cli(); args = sys.argv[1:]
if len(args) == 0: print("Available commands:"); [print(' '.join([
    f' {f.__name__}',
    *[f'<{a}>' for a in spec(f).args],
    *([f'<...{spec(f).varargs}>'] if spec(f).varargs is not None else [])
])) for f in commands]; exit(0)
matching_commands = [f for f in commands if f.__name__ == args[0]]
if len(matching_commands) == 0: print(f'Unknown command "{args[0]}"');sys.exit(1)
try: matching_commands[0](*args[1:])
except KeyboardInterrupt: pass
except subprocess.CalledProcessError as err: sys.exit(err.returncode)
